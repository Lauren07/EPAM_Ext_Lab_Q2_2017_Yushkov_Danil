
@model FileStorage.Models.UserChangePasswordViewModel
@{
    ViewBag.Title = "ChangePassword";
}

@Styles.Render("~/Content/userform.css")

<h3>Смена пароля</h3>
@using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { role = "form", @class = "form-horizontal", id = "regForm" }))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.Label("Текущий пароль:", new {@for="OldPassword", @class="col-sm-3 control-label" })
        <div class="col-sm-3">
            @Html.EditorFor(m => m.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.OldPassword)
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Новый пароль:", new { @for = "NewPassword", @class = "col-sm-3 control-label" })
        <div class="col-sm-3">
            @Html.EditorFor(m => m.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.NewPassword)
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Повторите новый пароль:", new { @for = "ConfirmNewPassword", @class = "col-sm-3 control-label" })
        <div class="col-sm-3">
            @Html.EditorFor(m => m.ConfirmNewPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.ConfirmNewPassword)
        </div>
    </div>
    if (ViewData["StateChange"] as string == "Success")
    {
        <div class="form-group">
            <div class="alert alert-success col-sm-6">Пароль успешно сменен.</div>           
        </div>

    }
    if (ViewData["StateChange"] as string == "Error")
    {
        <div class="form-group">
            <div class="alert alert-danger col-sm-6">Введен неверный пароль.</div>
        </div>
        
    }
    <div class="form-group">
        <div class="col-sm-3">
            <button type="submit" class="btn btn-primary" id="btnSubmitForm">Изменить</button>
        </div>       
    </div>
}

